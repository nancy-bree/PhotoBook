@model PhotoBook.Models.UploadModel

@{
    ViewBag.Title = "Upload";
}

<link rel="stylesheet" href="@Url.Content("~/Content/themes/base/jquery-ui.css")" />
<script src="@Url.Content("~/Scripts/jquery-ui-1.10.3.min.js")"></script>

<div class="page-header center">
  <h1>Upload</h1>
</div>

@using (Html.BeginForm("Upload", "Photo", FormMethod.Post, new { role = "form", @class = "col-md-6", enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(m => m.Photo)
        <input type="file" name="Photo" id="Photo" class="form-control" accept="image/jpeg" /> 
        @Html.ValidationMessageFor(m => m.Photo)
    </div>
    
    <div class="form-group">
        @Html.LabelFor(m => m.Description)
        @Html.TextAreaFor(m => m.Description, new { @class = "form-control"})
    </div>
    
    <div class="form-group">
        @Html.LabelFor(m => m.Tags)
        @Html.TextBoxFor(m => m.Tags, new { @class = "form-control"})
    </div>

    <input type="submit" value="Upload" class="btn btn-primary" /> 
}

<script>
    $(function () {
        function split(val) {
            return val.split(/,\s*/);
        }
        function extractLast(term) {
            return split(term).pop();
        }

        $("#Tags")
          // don't navigate away from the field on tab when selecting an item
          .bind("keydown", function (event) {
              if (event.keyCode === $.ui.keyCode.TAB &&
                  $(this).data("ui-autocomplete").menu.active) {
                  event.preventDefault();
              }
          })
          .autocomplete({
              source: function (request, response) {
                  $.getJSON("/Tag/GetTags", {
                      term: extractLast(request.term)
                  }, response);
              },
              search: function () {
                  // custom minLength
                  var term = extractLast(this.value);
                  if (term.length < 2) {
                      return false;
                  }
              },
              focus: function () {
                  // prevent value inserted on focus
                  return false;
              },
              select: function (event, ui) {
                  var terms = split(this.value);
                  // remove the current input
                  terms.pop();
                  // add the selected item
                  terms.push(ui.item.value);
                  // add placeholder to get the comma-and-space at the end
                  terms.push("");
                  this.value = terms.join(", ");
                  return false;
              }
          });
    });
  </script>

@*<script type="text/coffeescript">
    $ ->
  split = (val) ->
    val.split /,\s*/
  extractLast = (term) ->
    split(term).pop()
  
  # don't navigate away from the field on tab when selecting an item
  $("#Tags").bind("keydown", (event) ->
    event.preventDefault()  if event.keyCode is $.ui.keyCode.TAB and $(this).data("ui-autocomplete").menu.active
  ).autocomplete
    source: (request, response) ->
      $.getJSON "/Tag/GetTags",
        term: extractLast(request.term)
      , response

    search: ->
      
      # custom minLength
      term = extractLast(@value)
      false  if term.length < 2

    focus: ->
      
      # prevent value inserted on focus
      false

    select: (event, ui) ->
      terms = split(@value)
      
      # remove the current input
      terms.pop()
      
      # add the selected item
      terms.push ui.item.value
      
      # add placeholder to get the comma-and-space at the end
      terms.push ""
      @value = terms.join(", ")
      false
</script>*@
